<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Confirmation</title>
    <style>
        *{
            font-family: 'Poppins', sans-serif;
        }
    </style>
    <!-- Add Bootstrap CSS link here -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins&display=swap" rel="stylesheet">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bodymovin/5.7.8/lottie.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-body text-center" style="display: flex;flex-direction: column;align-items: center;">
                        <div id="lottie-container" class="lottie-container" style="height: 30%;width: 30%;"></div>
                        <h1 class="mt-3 text-primary">Complete payment to proceed !</h1>
                        <p class="lead">Your order details:</p>
                        <ul class="list-group mb-4">
                            <% newOrders.forEach((order) => { %>
                            <li class="list-group-item"><strong>Order ID:</strong><%= order._id %></li>
                            <li class="list-group-item"><strong>Order Date:</strong><%= order.orderDate.toDateString() %></li>
                            <li class="list-group-item"><strong>Payer Details:</strong><p><strong>Name:</strong> <%= user.username %></p>
                                <p><strong>Phone:</strong> <%= user.phoneNumber %></p>
                            <li class="list-group-item"><strong>Amount to pay:</strong> <%= order.items[0].price %></li>
                            <% }); %>
                        </ul>
                        <p>A payment link has been sent to  <strong><%=user.email%></strong></p><p id="timer">Please wait</p>
                        <a href="/userhome" class="btn btn-danger btn-lg">Cancel payment</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Bootstrap JS and jQuery scripts here (if needed) -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        // Specify the path to your Lottie JSON file
        const animationPath = '/1694858175285.json'; // Replace with the actual path
    
        // Get a reference to the container element
        const container = document.getElementById('lottie-container');
    
        // Configure the Lottie options
        const animationOptions = {
            container: container,
            renderer: 'svg', // You can choose 'svg', 'canvas', or 'html' based on your preference
            loop: true, // Set to true if you want the animation to loop
            autoplay: true, // Set to true to automatically start the animation
            path: animationPath, // Path to your Lottie JSON file
        };
    
        // Load the Lottie animation
        const anim = lottie.loadAnimation(animationOptions);

         // Set the countdown duration in seconds (10 minutes)
         const countdownDuration = 600;

// Get the timer element by ID
const timerElement = document.getElementById("timer");

// Function to update the countdown timer
function updateTimer(seconds) {
    const minutes = Math.floor(seconds / 60);
    const remainingSeconds = seconds % 60;
    
    // Format the time as MM:SS
    const formattedTime = `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
    
    // Update the timer text
    timerElement.textContent = `Please complete the payment within ${formattedTime}`;
}

// Function to start the countdown timer
function startTimer(duration) {
    let seconds = duration;

    // Initial update
    updateTimer(seconds);

    const timerInterval = setInterval(function () {
        // Update the timer
        updateTimer(seconds);

        if (seconds <= 0) {
            // Timer expired, clear the interval and perform any necessary actions
            clearInterval(timerInterval);

            // Optionally, hide the timer or display a message
            timerElement.textContent = "The payment link has expired. Please return to your cart.";
            
            // Prevent users from navigating back
            window.onbeforeunload = function () {
                return "Leaving this page will cancel the payment.";
            };

        } else {
            seconds--;
        }
    }, 1000); // Update the timer every 1 second
}

// Start the timer when the page loads
window.onload = function () {
    startTimer(countdownDuration);
};
    </script>
</body>
</html>
