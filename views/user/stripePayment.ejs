<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Form</title>
    <!-- Add Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-5">
        <h2>Payment Form</h2>
        <form id="payment-form">
            <div class="form-group">
                <label for="card-element">Credit or debit card</label>
                <div id="card-element">
                    <!-- A Stripe Element will be inserted here. -->
                </div>
                <!-- Used to display form errors. -->
                <div id="card-errors" role="alert"></div>
            </div>

            <button type="submit" class="btn btn-primary">Submit Payment</button>
        </form>
    </div>

    <!-- Add Bootstrap and Stripe.js -->
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@stripe/stripe-js"></script>
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        // Replace with your actual Stripe publishable key
        const stripe = Stripe('pk_test_51NsKXOSJLihuMCmZhy66WpAaPZZeATcrssoHmPBh1t9bFT6yJAohYmIYC639gbzQ2OuqY3ADWyCK5XuJKtiwh5x700EjoBprcI');
        const elements = stripe.elements();

        // Create an instance of the card Element.
        const cardElement = elements.create('card');

        // Add an instance of the card Element into the `card-element` div.
        cardElement.mount('#card-element');

        // Handle real-time validation errors from the card Element.
        cardElement.addEventListener('change', function(event) {
            const displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Handle form submission.
        const form = document.getElementById('payment-form');
        form.addEventListener('submit', async function(event) {
            event.preventDefault();

            // Disable the submit button to prevent multiple submissions.
            form.querySelector('button').disabled = true;

            const { token, error } = await stripe.createToken(cardElement);

            if (error) {
                // Show any errors that occur when creating the token.
                const errorElement = document.getElementById('card-errors');
                errorElement.textContent = error.message;
                // Enable the submit button to allow retrying.
                form.querySelector('button').disabled = false;
            } else {
                // Send the token to your server to charge the user.
                // Replace with your server-side code to handle the payment.
                fetch('/charge', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ token: token.id }),
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Payment successful, show a success message or redirect.
                        alert('Payment successful!');
                    } else {
                        // Payment failed, display an error message.
                        alert('Payment failed: ' + data.error);
                    }
                });
            }
        });
    </script>
</body>
</html>
